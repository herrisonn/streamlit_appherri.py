# Instala√ß√£o de bibliotecas necess√°rias
!pip install -q streamlit gspread oauth2client pandas

# Importa√ß√µes
import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
from google.colab import auth
from oauth2client.client import GoogleCredentials

# Importa√ß√µes adicionais para execu√ß√£o em background
import subprocess
import sys
import os

# Script principal
script_code = '''
import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
from google.colab import auth
from oauth2client.client import GoogleCredentials

def get_google_sheet():
    try:
        auth.authenticate_user()
        gc = gspread.authorize(GoogleCredentials.get_application_default())
        
        # Verifica se a planilha existe, se n√£o cria
        try:
            sheet = gc.open('Controle_de_Ponto').sheet1
        except gspread.SpreadsheetNotFound:
            sheet = gc.create('Controle_de_Ponto').sheet1
            sheet.append_row(["Funcion√°rio", "Tipo de Registro", "Data/Hora"])
        
        return sheet
    except Exception as e:
        st.error(f"Erro de autentica√ß√£o: {e}")
        return None

class PontoTracker:
    def __init__(self):
        self.sheet = get_google_sheet()
        
    def registrar_ponto(self, funcionario, tipo_registro):
        if not self.sheet:
            st.error("Planilha n√£o configurada. Fa√ßa login no Google.")
            return
        
        data_hora = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        novo_registro = [funcionario, tipo_registro, data_hora]
        
        self.sheet.append_row(novo_registro)
        st.success(f"Registro de {tipo_registro} para {funcionario} realizado com sucesso!")

def main():
    st.set_page_config(
        page_title="Sistema de Gest√£o de Ponto",
        page_icon="‚è∞",
        layout="centered"
    )

    st.title("üïí Controle de Ponto")

    # Autentica√ß√£o
    st.sidebar.header("Login")
    funcionario = st.sidebar.text_input("Nome do Funcion√°rio")
    
    # Senha de exemplo - recomendo alterar
    SENHA_PADRAO = "empresa2024"
    senha = st.sidebar.text_input("Senha", type="password")

    if senha != SENHA_PADRAO:
        st.warning("Por favor, insira a senha correta")
        return

    if funcionario:
        tracker = PontoTracker()

        col1, col2 = st.columns(2)

        with col1:
            if st.button("üü¢ In√≠cio do Expediente", key="inicio"):
                tracker.registrar_ponto(funcionario, "In√≠cio do Expediente")

            if st.button("üçΩÔ∏è In√≠cio do Almo√ßo", key="almoco_inicio"):
                tracker.registrar_ponto(funcionario, "In√≠cio do Almo√ßo")

        with col2:
            if st.button("üèÅ Fim do Almo√ßo", key="almoco_fim"):
                tracker.registrar_ponto(funcionario, "Fim do Almo√ßo")

            if st.button("üî¥ Fim do Expediente", key="fim"):
                tracker.registrar_ponto(funcionario, "Fim do Expediente")

        # Mostrar registros do dia
        st.subheader("Seus Registros de Hoje")
        hoje = datetime.now().strftime("%Y-%m-%d")
        
        try:
            # Carrega todos os registros
            registros = tracker.sheet.get_all_records()
            
            # Filtra registros do funcion√°rio e do dia atual
            registros_hoje = [
                reg for reg in registros 
                if reg.get('Funcion√°rio') == funcionario and 
                   reg.get('Data/Hora', '').startswith(hoje)
            ]
            
            if registros_hoje:
                df = pd.DataFrame(registros_hoje)
                st.dataframe(df)
            else:
                st.info("Nenhum registro encontrado hoje.")
        except Exception as e:
            st.error(f"Erro ao carregar registros: {e}")

if __name__ == '__main__':
    main()
'''

# Salva o script em um arquivo
with open('app.py', 'w') as f:
    f.write(script_code)

# Fun√ß√£o para rodar Streamlit em background
def run_streamlit():
    print("Iniciando Streamlit...")
    subprocess.run(['streamlit', 'run', 'app.py', '--server.port=8501'])

# Salva o script de execu√ß√£o
with open('run_streamlit.py', 'w') as f:
    f.write('''
import subprocess
import sys

def run_streamlit():
    subprocess.run(['streamlit', 'run', 'app.py', '--server.port=8501'])

if __name__ == '__main__':
    run_streamlit()
''')

print("üöÄ Ambiente preparado com sucesso!")
print("Pr√≥ximo passo: Execute a c√©lula de execu√ß√£o do Streamlit")
